/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

#include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/* END temporary RGB support section */

/ {
    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };
};

&soft_off {
    hold-time-ms = <400>; // Only turn off it the key is held for 0.4 seconds or longer.
    // To help potentially solve for issues where peripheral sometimes do not soft off
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
// ------------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N2    &kp N3    &kp N4   &kp N5                                     &kp N6      &kp N7    &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB   &kp Q  &kp W     &kp E     &kp R    &kp T                                      &kp Y       &kp U     &kp I     &kp O    &kp P    &kp EQUAL
&kp LSHFT &kp A  &kp S     &kp D     &kp F    &kp G                                      &kp H       &kp J     &kp K     &kp L    &kp SEMI &kp APOS
&kp ESC   &kp Z  &kp X     &kp C     &kp V    &kp B       &kp C_MUTE     &rgb_ug RGB_TOG &kp N       &kp M     &kp COMMA &kp DOT  &kp FSLH &kp K_CMENU
                 &lt 2 DEL &kp LCTRL &kp LALT &kp SPACE   &kp LGUI       &lt 1 BSPC      &kp SPACE   &kp LBKT  &kp RBKT  &kp BSLH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
            label = "Low";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6                                    &kp F7          &kp F8   &kp F9     &kp F10    &kp F11 &kp F12
&trans     &trans       &trans       &trans       &trans       &trans                                    &kp C_VOLUME_UP &kp C_PP &kp C_PREV &kp C_NEXT &trans  &trans
&trans     &trans       &trans       &trans       &trans       &trans                                    &kp C_MUTE      &trans   &kp UP     &trans     &trans  &trans
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans     &ext_power EP_TOG &kp C_VOLUME_DOWN    &kp LEFT &kp DOWN   &kp RIGHT  &trans  &trans
                        &trans       &trans       &trans       &trans       &trans     &trans            &kp RET              &trans   &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
            label = "Raise";
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                 |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                 | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                 | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |   | RGB  |      |      |       |      |       |       |
//              |      |       |       |      |      |   |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                              &trans           &trans                           &trans                              &trans                             &trans                             &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                                    &rgb_ug RGB_EFF  &trans                           &trans                              &trans                             &trans                             &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                                  &rgb_ug RGB_EFR  &rgb_ug RGB_COLOR_HSB(360,0,100) &rgb_ug RGB_COLOR_HSB(360,100,100)  &rgb_ug RGB_COLOR_HSB(128,100,100) &rgb_ug RGB_COLOR_HSB(193,100,100) &trans
&soft_off  &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans        &trans     &rgb_ug RGB_TOG  &rgb_ug RGB_ON   &rgb_ug RGB_OFF                  &rgb_ug RGB_BRI                     &rgb_ug RGB_BRD                    &rgb_ug RGB_SPI                    &rgb_ug RGB_SPD
                        &trans       &trans       &trans       &trans        &trans     &trans           &rgb_ug RGB_HUI  &rgb_ug RGB_HUD                  &rgb_ug RGB_SAI                     &rgb_ug RGB_SAD  
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &rgb_encoder>;
        };
    };
};
