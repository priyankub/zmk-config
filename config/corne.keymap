/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

/*
 * Temporarily here because we use the TX pin for LEDs as the standard one is used for CS for the display
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/corne/boards/nice_nano_v2.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

#include <dt-bindings/led/led.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <28>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/* END temporary RGB support section */

&soft_off {
    hold-time-ms = <400>; // Only turn off it the key is held for 0.4 seconds or longer.
    // To help potentially solve for issues where peripheral sometimes do not soft off
};

// https://github.com/urob/zmk-config?tab=readme-ov-file#timeless-homerow-mods
// https://github.com/urob/zmk-helpers/blob/main/include/zmk-helpers/key-labels/42.h

#define KEYS_L 5 4 3 2 1 0 17 16 15 14 13 12 29 28 27 26 25 24    // Left-hand keys.
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35  // Right-hand keys.
#define THUMBS 36 37 38 39 40 41                                  // Thumb keys.
#define TTERM_MS 280
#define QTAP_MS 175
#define RPIM_MS 110

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TTERM_MS>;
            quick-tap-ms = <QTAP_MS>;
            require-prior-idle-ms = <RPIM_MS>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TTERM_MS>;
            quick-tap-ms = <QTAP_MS>;
            require-prior-idle-ms = <RPIM_MS>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
&kp GRAVE   &kp Q         &kp W        &kp E       &kp R       &kp T           &kp Y           &kp U     &kp I     &kp O        &kp P     &kp MINUS
&kp LSHFT   &hml LSHFT A  &hml LALT S  &kp D       &kp F       &kp G           &kp H           &kp J     &kp K     &hmr RALT L  &kp SEMI  &hmr RSHFT APOS
&kp ESC     &kp Z         &kp X        &kp C       &kp V       &kp B           &kp N           &kp M     &kp COMMA &kp DOT      &kp SLASH &kp BSLH
                                       &kp LCTRL   &lt 1 SPACE &kp LGUI        &lt 2 BACKSPACE &kp SPACE &kp TAB
            >;
        };

        Sym {
            label = "Sym";
            bindings = <
&kp UNDER &kp N1 &kp N2 &kp N3  &kp N4 &kp N5    &kp N6 &kp N7 &kp N8 &kp N9    &kp N0   &kp EQUAL
&trans    &trans &trans &trans  &trans &trans    &trans &trans &trans  &kp LBKT &kp RBKT &kp MINUS
&trans    &trans &trans &trans  &trans &trans    &trans &trans &trans  &trans   &trans   &trans
                        &kp ESC &trans &kp TAB   &trans &trans &trans
            >;
        };

        Nav {
            label = "Nav";
            bindings = <
&kp F1 &kp F2 &kp F3 &kp F4  &kp F5 &kp F6     &kp F7 &kp F8         &kp F9         &kp F10         &kp F11 &kp F12
&trans &trans &trans &trans  &trans &trans     &trans &trans         &kp UP_ARROW   &trans          &trans  &trans
&trans &trans &trans &trans  &trans &trans     &trans &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &trans  &trans
                     &kp ESC &trans &kp TAB    &trans &kp ENTER      &trans
            >;
        };

        Tune {
            label = "Tune";
            bindings = <
&bt BT_CLR  &none         &none         &none         &none         &none            &kp C_VOLUME_UP &kp C_PP                         &kp C_PREV                         &kp C_NEXT                         &none                              &none
&bootloader &none         &none         &none         &none         &none            &kp C_MUTE      &rgb_ug RGB_COLOR_HSB(360,0,100) &rgb_ug RGB_COLOR_HSB(360,100,100) &rgb_ug RGB_COLOR_HSB(128,100,100) &rgb_ug RGB_COLOR_HSB(193,100,100) &bootloader
&soft_off   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &kp C_VOL_DN    &rgb_ug RGB_TOG                  &rgb_ug RGB_BRD                    &rgb_ug RGB_BRI                    &none                              &none
                                        &trans        &none         &trans           &trans          &rgb_ug RGB_EFF                  &rgb_ug RGB_EFR
            >;
        };
    };

        conditional_layers {
        compatible = "zmk,conditional-layers";

        raise_lower {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };
};
